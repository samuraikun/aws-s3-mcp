services:
  # Deno AWS S3 MCP Server
  aws-s3-mcp:
    build:
      context: .
      dockerfile: Dockerfile.deno
    environment:
      - AWS_REGION=${AWS_REGION:-us-east-1}
      - AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID}
      - AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY}
      - S3_BUCKETS=${S3_BUCKETS}
      - S3_MAX_BUCKETS=${S3_MAX_BUCKETS:-5}
      - AWS_ENDPOINT=${AWS_ENDPOINT}
      - AWS_S3_FORCE_PATH_STYLE=${AWS_S3_FORCE_PATH_STYLE:-false}
    # Allow CLI stdin interaction
    stdin_open: true
    tty: true
    # Persist caching
    volumes:
      - deno-cache:/app/.deno-dir
    # Entrypoint is defined in Dockerfile with all necessary permissions
    # Ensure command matches what's specified in Dockerfile
    command: ["src/index.ts"]
    # Port for debugging or future web interface
    ports:
      - 3000:3000
    # For robustness
    restart: unless-stopped
    networks:
      - mcp-network

  # MinIO S3-compatible storage server for local development/testing
  minio:
    image: minio/minio:RELEASE.2025-03-12T18-04-18Z
    ports:
      - "9000:9000" # S3 API
      - "9001:9001" # Web UI
    env_file: .env.local
    environment:
      MINIO_ROOT_USER: ${MINIO_ROOT_USER}
      MINIO_ROOT_PASSWORD: ${MINIO_ROOT_PASSWORD}
    command: server /data --console-address ":9001"
    volumes:
      - minio_data:/data
    networks:
      - mcp-network

  # MinIO client for bucket setup
  minio-mc:
    image: minio/mc:RELEASE.2025-03-12T17-29-24Z
    depends_on:
      - minio
    env_file: .env.local
    environment:
      MINIO_ROOT_USER: ${MINIO_ROOT_USER}
      MINIO_ROOT_PASSWORD: ${MINIO_ROOT_PASSWORD}
    entrypoint: >
      /bin/sh -c "
      echo 'Waiting for MinIO to start...' && sleep 3;
      /usr/bin/mc config host add myminio http://minio:9000 $MINIO_ROOT_USER $MINIO_ROOT_PASSWORD;
      /usr/bin/mc mb myminio/test-bucket-1 --ignore-existing;
      /usr/bin/mc mb myminio/test-bucket-2 --ignore-existing;
      tail -f /dev/null;
      "
    networks:
      - mcp-network

volumes:
  minio_data:
    driver: local
  deno-cache:
    driver: local

networks:
  mcp-network:
    driver: bridge
